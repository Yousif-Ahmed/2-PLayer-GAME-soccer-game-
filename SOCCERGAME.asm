;________________________________________________________MACROS___________________________________________________________________________

clear_screen MACRO
									  mov ax,0600h
									  mov bh,07
									  mov cx,0
									  mov dx,184fh
									  int 10h
ENDM clear_screen


print_game_separators MACRO x,y,xf
LOCAL sep1, sep2
	                                  mov          dx,y
	                                  mov          ah,0ch
	                                  mov          bh,0
	                                  mov          di,dx
									  add          di,2
	                                  mov          al,0bh
	sep1:                             mov          cx,x
	sep2:                             int          10h
	                                  inc          cx
	                                  cmp          cx,xf
	                                  jnz          sep2
	                                  inc          dx
	                                  cmp          dx,di
	                                  jnz          sep1

ENDM print_game_separators

score_line_separators MACRO x, y
LOCAL x1,x2
									  mov cx,x
									  mov ah,0ch
									  mov bh,0
									  mov di,cx
									  mov si,y
									  add si,25
									  add di,2
									  mov al,0bh
									  x1:mov dx,y
									  x2:int 10h
									  inc dx
									  cmp dx,si
									  jnz x2
									  inc cx
									  cmp cx,di
									  jnz x1

ENDM score_line_separators 


main_screen MACRO username_buffer, username, actual_size, name_message, enter_key, error_message, p
LOCAL reEnter, NoError, v1, v2,v3, v4, n1, n2, n3, n4, validated
	;-------------------------------- clear screen
									  mov si,0
	reEnter:                          clear_screen

	;-------------------------------  decoration
	;-------------------------------  cursor
	                                  mov   ah,2
	                                  mov   bh,0
	                                  mov   dl,36
	                                  mov   dh,4
	                                  int   10h

	;-------------------------------- print PLAYER 1
	                                  mov   dx,offset p
	                                  mov   ah,9
	                                  int   21h

	;-------------------------------- print '[]'
	                                  mov   ah,2
	                                  mov   dh,4
	                                  mov   dl,35
	                                  int   10h
	                                  mov   dl,'['
	                                  int   21h


	                                  mov   dh,4
	                                  mov   dl,44
	                                  int   10h
	                                  mov   dl,']'
	                                  int   21h

	;-------------------------------- move cursor to screen center
	                                  mov   ah,2
	                                  mov   bh,0
	                                  mov   dl,29
	                                  mov   dh,10
	                                  int   10h

	;-------------------------------- print name message
	                                  mov   dx,offset name_message
	                                  mov   ah,9
	                                  int   21h

	;-------------------------------- move cursor
	                                  mov   ah,2
	                                  mov   dl,29
	                                  mov   dh,14
	                                  int   10h

	;-------------------------------- print enter message
	                                  mov   dx,offset enter_key
	                                  mov   ah,9
	                                  int   21h

	;-------------------------------- print error message if any
	                                  cmp   si,-1
	                                  jnz   NoError
	                                  mov   bh,0
	                                  mov   ah,2
	                                  mov   dl,0
	                                  mov   dh,24
	                                  int   10h

	                                  mov   dx,offset error_message
	                                  mov   ah,9
	                                  int   21h

	;-------------------------------- read name
	NoError:                          
	                                  mov   ah,2
	                                  mov   dl,33
	                                  mov   dh,12
	                                  int   10h

	                                  mov   ah,0ah
	                                  mov   dx,offset username_buffer
	                                  int   21h

	;-------------------------------- validate name
	                                  cmp   username, 'a'
	                                  jae   v1
	                                  mov   bl,0
	                                  jmp   n1
	v1:                               mov   bl,1

	n1:                               cmp   username,'z'
	                                  jbe   v2
	                                  mov   bh,0
	                                  jmp   n2
	v2:                               mov   bh,1

	n2:                               and   bh,bl

	                                  cmp   username, 'A'
	                                  jae   v3
	                                  mov   cl,0
	                                  jmp   n3
	v3:                               mov   cl,1

	n3:                               cmp   username,'Z'
	                                  jbe   v4
	                                  mov   ch,0
	                                  jmp   n4
	v4:                               mov   ch,1

	n4:                               and   ch,cl

	                                  or    bh,ch
	                                  jnz   validated

	;-------------------------------- indicate that the name is incorrect
	                                  mov   si,-1                                                    
	                                  jmp   reEnter


	;-------------------------------- put $ at the end of the name
	validated:                        mov   bl,actual_size
	                                  mov   bh,0
	                                  mov   username[bx], '$'
ENDM  main_screen


print_dashes MACRO y
LOCAL status_dashes
	                                  mov         ah,2
	                                  mov         bh,0
	                                  mov         dh,y

	                                  mov         dl,-1
	status_dashes:                    inc         dl
	                                  int         10h
	                                  mov         bl,dl
	                                  mov         dl,'-'
	                                  int         21h
	                                  mov         dl,bl
	                                  cmp         dl,79
	                                  jnz         status_dashes
ENDM print_dashes


;________________________________________________________________________________________________________________________________________
.MODEL SMALL
.STACK 64
;----------------------------------------------------------------------------------------------------------------------------------------
.DATA
	
	Player1Color          DB               31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 4, 4, 4, 4, 4, 4, 4, 4, 4, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 18, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 4, 4, 4, 4, 4, 4, 4, 4, 4, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39
	                      DB               39, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 4, 4, 4, 4, 4, 4, 4, 4, 4, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39
	                      DB               39, 39, 39, 39, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 39, 39, 39, 39, 39, 39, 39, 39
	                      DB               39, 39, 39, 39, 39, 39, 39, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 39, 39, 39, 39, 39
	                      DB               39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 39, 39
	                      DB               39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 27, 27, 27
	                      DB               27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27
	                      DB               18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27
	                      DB               27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27
	                      DB               27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27
	                      DB               27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27
	                      DB               27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27
	                      DB               27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27
	                      DB               27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27
	                      DB               27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27, 27, 27, 27
	                      DB               27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 27, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18
	                      DB               18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 65, 65, 65, 65, 65, 65, 65, 65
	                      DB               65, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 65, 65, 65, 65, 65
	                      DB               65, 65, 65, 65, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 65, 65
	                      DB               65, 65, 65, 65, 65, 65, 65, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65
	                      DB               18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 27, 27, 27, 27, 27, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 27, 27, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66
	                      DB               66, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66
	                      DB               66, 66, 66, 66, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18
	                      DB               66, 66, 66, 66, 66, 66, 66, 18, 18, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31
	                      DB               31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 18, 66, 66, 66, 66, 66, 66, 66, 66
	                      DB               18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 18, 66, 66, 66, 66, 66
	                      DB               66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 18, 66, 66
	                      DB               66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14
	                      DB               18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14
	                      DB               6, 6, 6, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6
	                      DB               6, 14, 14, 6, 6, 6, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 18, 18, 65, 65, 65, 65, 65, 65, 65, 18, 18, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6
	                      DB               6, 6, 14, 14, 6, 6, 14, 14, 14, 18, 65, 65, 65, 65, 65, 65, 65, 65, 18, 31, 31, 31, 18, 18, 65, 65, 65, 65, 65, 65, 65, 18, 18, 6, 6, 14, 14, 14, 6, 6
	                      DB               14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 18, 65, 65, 65, 65, 65, 65, 65, 65, 18, 31, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 14, 14, 6, 6
	                      DB               6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 14
	                      DB               14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27
	                      DB               18, 18, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 18, 27, 27, 27, 27, 27, 27
	                      DB               27, 27, 27, 18, 18, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 18, 18, 18, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 18, 18
	                      DB               18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18
	                      DB               18, 18, 18, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 27, 27, 27, 27, 27, 27, 27
	                      DB               27, 27, 18, 18, 18, 18, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 27, 27, 27, 27
	                      DB               27, 27, 27, 27, 27, 18, 18, 18, 18, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 18, 18, 18, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14
	                      DB               14, 14, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 18, 31, 31, 31, 18, 27, 27, 27, 27, 27, 27, 27, 27, 27, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6
	                      DB               14, 14, 6, 6, 6, 27, 27, 27, 27, 27, 27, 27, 27, 27, 18, 31, 31, 31, 31, 18, 18, 18, 18, 18, 27, 27, 27, 27, 27, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14
	                      DB               14, 6, 6, 14, 14, 6, 6, 6, 27, 27, 27, 27, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 18, 18, 18, 18, 18, 27, 27, 27, 27, 27, 6, 6, 14, 14, 14, 6, 6, 14
	                      DB               14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 27, 27, 27, 27, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 18, 27, 27, 27, 27, 27, 6, 6, 14, 14, 14
	                      DB               6, 6, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 27, 27, 27, 27, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 27, 14, 14
	                      DB               6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18
	                      DB               27, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 18, 18, 26, 14, 14, 6, 6, 6, 14, 14, 6, 6, 14, 14, 14, 6, 6, 14, 14, 6, 6, 6, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 65, 65, 65, 65, 65, 65, 65, 66, 66, 18, 18, 18, 18, 18, 18, 18
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 65, 65, 65, 65, 65, 65, 65, 66, 66, 18, 18, 18, 18
	                      DB               18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 65, 65, 65, 65, 65, 65, 65, 66, 66, 18
	                      DB               18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 66, 66, 66, 66, 66, 66, 66
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 66, 66, 66, 66, 66
	                      DB               66, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 66, 66
	                      DB               66, 66, 66, 66, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18
	                      DB               66, 66, 66, 66, 66, 66, 66, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 18, 18, 66, 66, 18, 18, 18, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 16, 16, 18, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 4, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 4, 18, 18, 18, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 4, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 4, 18
	                      DB               18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 4, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40
	                      DB               40, 4, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 4, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40
	                      DB               40, 40, 40, 40, 4, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 16, 16, 16, 16, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18
	                      DB               18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18
	                      DB               18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	
	Player2Color          DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 47, 47, 47, 47, 47, 47, 47, 47
	                      DB               47, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 47, 47, 47, 47, 47
	                      DB               47, 47, 47, 47, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 47, 47
	                      DB               47, 47, 47, 47, 47, 47, 47, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43
	                      DB               43, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43
	                      DB               43, 43, 43, 43, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 43, 43, 43, 43, 43, 43, 43, 43
	                      DB               43, 43, 43, 43, 43, 43, 43, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1
	                      DB               1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1
	                      DB               1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1
	                      DB               1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1
	                      DB               1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1
	                      DB               1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1
	                      DB               1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1
	                      DB               1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1
	                      DB               1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18
	                      DB               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
	                      DB               18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65
	                      DB               18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 65, 65, 65, 65, 65, 65
	                      DB               65, 65, 65, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 65, 65, 65
	                      DB               65, 65, 65, 65, 65, 65, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 18
	                      DB               65, 65, 65, 65, 65, 65, 65, 65, 65, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 1, 1, 1, 1, 1, 1, 1, 1
	                      DB               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 1, 1, 1, 1, 1
	                      DB               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 1, 1
	                      DB               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66
	                      DB               18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66
	                      DB               66, 66, 66, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66
	                      DB               66, 66, 66, 66, 66, 66, 18, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31
	                      DB               18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18
	                      DB               31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 66, 66, 66, 66, 66, 66
	                      DB               66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 66, 66, 66
	                      DB               66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18
	                      DB               66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 66, 66, 66, 66, 66, 66, 66, 66, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 18, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 18, 65, 65, 65, 65, 65, 65, 65, 65, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 18, 65, 65, 65, 65, 65, 65, 65, 18, 18, 31, 31, 31, 18, 65, 65, 65, 65, 65, 65, 65, 65, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 65, 65, 65, 65, 65, 65, 65, 18, 18, 31, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 1, 1, 1, 1, 1, 1, 1
	                      DB               1, 1, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 18, 1, 1, 1
	                      DB               1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 18, 18, 18
	                      DB               1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18
	                      DB               18, 18, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1
	                      DB               18, 18, 18, 18, 18, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 1
	                      DB               1, 1, 1, 18, 18, 18, 18, 18, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1
	                      DB               1, 1, 1, 1, 1, 1, 18, 18, 18, 18, 18, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 18, 18, 31, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 18, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 18, 18, 18, 18, 18, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 6, 6, 6, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 6
	                      DB               6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18
	                      DB               18, 18, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 66, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 66, 66, 65, 65, 65, 65, 65, 65, 65, 18, 18, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 66, 66, 65, 65, 65, 65, 65, 65, 65, 18, 18, 18, 18, 18, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 66, 66, 65, 65, 65, 65, 65, 65, 65, 18, 18, 18
	                      DB               18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 16, 16, 16, 16, 16, 16, 16, 16, 66, 66, 66, 66, 66, 66, 66
	                      DB               18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
	                      DB               66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 16, 16, 16, 16, 16, 16, 16, 16
	                      DB               16, 16, 16, 66, 66, 66, 66, 66, 66, 66, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 16, 16, 16, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 66, 66, 66, 66, 66, 66, 66, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 18, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 66, 66, 66, 66, 66, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 18, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 18, 18, 18, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 18, 16, 16, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 66, 18, 18, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 66, 66, 18, 18, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 43, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 43, 18
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 43, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47
	                      DB               47, 43, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 43, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47
	                      DB               47, 47, 47, 47, 43, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 43, 47, 47, 47, 47, 47, 47, 47
	                      DB               47, 47, 47, 47, 47, 47, 47, 43, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 16, 16, 16, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18, 18, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 18, 18
	                      DB               18, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 31, 31, 31, 31, 31, 31, 31

​
	BallColor             DB               44, 44, 44, 44, 31, 44, 44, 44, 44, 44, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44
	                      DB               44, 44, 44, 16, 16, 16, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 31
	                      DB               31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 16, 31, 31, 31, 31, 31, 16, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 16, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 16, 16, 234, 44, 44, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 16, 16, 16, 234, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16
	                      DB               16, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 44, 44, 44, 44
	                      DB               44, 44, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 16, 16, 16
	                      DB               16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 44, 44, 44, 44, 16, 16, 16, 16, 16, 16, 16, 16, 16
	                      DB               16, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 44, 44, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 16
	                      DB               16, 16, 16, 16, 16, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 31, 16, 16, 16, 16, 16, 16
	                      DB               31, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 31, 16, 16, 16, 16, 16, 16, 31, 16, 16, 16, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 44
	                      DB               16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16
	                      DB               16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 31, 16, 16, 16, 16, 16, 16
	                      DB               31, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 31, 16, 16, 16, 16, 16, 16, 31, 16, 16, 16, 16
	                      DB               31, 31, 31, 31, 31, 31, 31, 16, 16, 44, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 16, 16, 16, 16, 16, 16, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16
	                      DB               16, 16, 16, 16, 44, 44, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 44, 44
	                      DB               44, 44, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 16, 16, 16
	                      DB               16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 44, 16, 16, 16, 16, 16, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 16, 16, 16, 234, 44, 44, 44, 44, 44, 44, 44, 44, 44, 16, 16, 31, 31, 31, 31, 31, 31, 31, 31, 31, 16, 16, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 16, 16, 234, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 16, 31, 31, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 31, 31, 16, 44, 44
	                      DB               44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 31, 31, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 31, 31, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44
	                      DB               44, 44, 44, 44, 44, 44, 44, 44, 16, 16, 16, 31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 31, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44
	                      DB               44, 44, 44, 44, 44, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44
	                      DB               44, 44, 44, 16, 16, 16, 16, 16, 16, 16, 16, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44

	
	rightGoalKeeper       DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 28, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 28, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31
	                      DB               27, 27, 27, 30, 27, 27, 27, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 28, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 28, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 28, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 28, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 28, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 28, 27, 28, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 30
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 28, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 28, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 28, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 28, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 29
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 30, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 30, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 29, 31, 31, 31, 31, 30, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               27, 29, 31, 31, 31, 31, 29, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27
	                      DB               27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 28, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 27, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               27, 27, 27, 27, 29, 31, 31, 31, 31, 29, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 27, 27, 27, 27, 27, 30, 31, 31, 31, 31
	                      DB               28, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 27, 27, 27, 28, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 30, 31, 31, 27, 27, 27, 27, 27, 27, 28, 31, 31, 31, 31, 30, 27, 27, 28, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               27, 27, 27, 27, 27, 27, 27, 29, 31, 31, 31, 31, 29, 27, 28, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 27, 27, 27, 27, 27, 27, 30, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 27, 27, 27, 27, 28, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31
	                      DB               27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 31, 31, 31, 31, 30, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 29, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27
	                      DB               27, 30, 31, 31, 31, 31, 28, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 31, 31, 31, 31, 30, 27, 27, 31
	                      DB               27, 27, 27, 31, 28, 27, 27, 31, 31, 31, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27
	                      DB               27, 27, 27, 27, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31

	LeftGoalKeeper        DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 26, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 26, 27, 27, 30, 27, 26, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 26, 26, 31, 27, 27, 27, 26, 31, 31, 31, 31, 31, 30, 26, 27, 27, 31, 27, 27, 27
	                      DB               31, 27, 27, 27, 29, 28, 27, 26, 31, 27, 26, 27, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 28, 28, 27, 27, 31, 27
	                      DB               27, 26, 31, 27, 26, 26, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 28, 27, 26, 27, 31, 27, 27, 27, 31, 26, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 31, 27, 27, 27, 31, 26, 26, 27, 29, 26, 27, 27, 31, 27, 27, 26, 31, 27, 27, 26, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 26, 27, 31, 27, 27, 26, 31, 27, 27, 27, 29, 27, 26, 27, 31, 27
	                      DB               26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 26, 29, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 30, 27, 27, 27, 31, 27, 26, 27, 29, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 30, 26, 27, 27, 31, 27, 27, 27
	                      DB               31, 27, 26, 27, 29, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 29, 27, 26, 27, 31, 26, 27, 27, 31, 27, 27, 26, 30, 27, 27, 27, 31, 27, 26, 27, 31, 26, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 27, 27, 27
	                      DB               31, 26, 26, 27, 29, 26, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 30, 27, 26, 27, 31, 27, 26, 26, 31, 27, 27, 26, 29, 27, 27, 26, 31, 27
	                      DB               26, 27, 31, 27, 27, 26, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 26, 27, 27, 30, 27, 27, 27, 31, 27, 26, 27, 29, 27, 27, 26, 31, 27, 27, 27, 31, 27, 27, 27, 28, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 26, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 26, 27, 31, 27, 27, 26, 31, 26, 27, 27, 30, 27, 27, 27, 31, 27, 26, 26, 31, 27, 27, 27, 27, 30, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 29, 27, 27, 26, 31, 27, 26, 27, 31, 27, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27
	                      DB               31, 26, 26, 27, 30, 26, 26, 27, 31, 27, 27, 27, 31, 27, 26, 27, 27, 30, 31, 31, 31, 31, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 30, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 30, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 27, 26, 27, 31, 27, 26, 27, 31, 26, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27
	                      DB               31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 30, 26, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 26, 27, 27, 30, 31, 31, 31, 31, 31, 27, 26, 27, 30, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 26, 27, 31, 26, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 28, 31, 27, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 29, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 26, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 27, 26, 30, 28, 26, 27, 31, 27, 26, 27, 31, 27, 27, 27, 27, 30, 31, 31
	                      DB               31, 31, 31, 26, 27, 27, 30, 27, 26, 27, 31, 27, 27, 27, 30, 28, 27, 27, 31, 27, 27, 27, 31, 26, 27, 26, 26, 30, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27
	                      DB               31, 26, 26, 27, 30, 28, 27, 27, 31, 27, 27, 26, 31, 27, 27, 26, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 28, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 30, 28, 27, 27, 31, 27, 26, 27, 31, 26, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27
	                      DB               31, 26, 26, 27, 30, 28, 26, 27, 31, 27, 27, 26, 31, 27, 27, 27, 26, 31, 31, 31, 31, 31, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 26, 30, 28, 27, 26, 31, 27
	                      DB               26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 30, 26, 27, 27, 31, 26, 26, 27, 30, 27, 27, 27, 31, 27, 27, 26, 31, 27, 26, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 26, 27, 31, 27, 27, 26, 31, 27, 27, 27, 30, 28, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 30, 28, 26, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 26, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 30, 28, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 30, 27, 26, 26, 31, 27, 26, 27, 30, 28, 27, 26, 31, 27, 27, 26, 31, 27, 26, 26, 28, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27
	                      DB               31, 26, 27, 27, 30, 27, 26, 27, 31, 27, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 28, 27, 27, 31, 27
	                      DB               27, 27, 31, 26, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27
	                      DB               31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 30, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 30, 28, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 26, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 30, 27, 26, 27, 31, 27
	                      DB               26, 27, 31, 26, 27, 26, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 26, 26, 27, 31, 27, 27, 27, 31, 27, 26, 27, 30, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 26
	                      DB               31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 26, 27
	                      DB               31, 27, 26, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 27, 26, 27, 30, 26, 27, 27, 31, 27, 27, 27, 31, 27, 26, 26, 31, 27
	                      DB               26, 26, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 28, 31, 31, 31
	                      DB               31, 31, 29, 26, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 28, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 28, 31, 31, 31, 31, 31, 29, 27, 27, 27, 31, 27, 26, 27, 31, 26, 26, 27, 31, 27, 27, 26, 31, 26, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 26, 27, 27, 30, 27, 27, 26, 31, 27, 27, 27, 31, 27, 26, 26, 31, 27, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27
	                      DB               31, 26, 27, 27, 31, 27, 27, 27, 31, 26, 27, 26, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 28, 26, 27, 31, 27, 26, 27, 31, 27, 27, 26, 31, 27, 26, 27, 31, 27
	                      DB               27, 27, 31, 26, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 28, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 26, 27, 31, 27, 27, 27
	                      DB               31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 26
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 26, 27, 27, 26, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 31, 27, 26, 27, 27, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 26, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 26, 27, 26, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 31, 26, 27, 26, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 26, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27
	                      DB               31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 26, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 26, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 26, 27
	                      DB               31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 26, 27, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 26, 27, 31, 27
	                      DB               27, 26, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 26, 31, 31, 31
	                      DB               31, 31, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 26, 26, 31, 27, 27, 26, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 28, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 26, 27, 31, 26, 27, 26, 31, 26, 27, 27, 31, 27, 27, 26, 31, 27, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 30, 27, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 30, 26, 27, 27, 31, 26, 26, 27
	                      DB               31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 28, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 26, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 26, 27, 27, 30, 27, 26, 27
	                      DB               31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27
	                      DB               27, 27, 31, 27, 26, 27, 28, 31, 31, 31, 31, 31, 31, 26, 27, 27, 30, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 31, 27
	                      DB               27, 26, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 26, 27, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27
	                      DB               31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 27, 30, 31, 31, 31, 31, 31, 27, 27, 28, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               30, 31, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 31, 27, 27, 26, 31, 26, 27, 27, 27, 31, 31, 31, 30, 31, 31, 27, 27, 27, 31, 26, 27, 27
	                      DB               31, 26, 26, 27, 31, 27, 27, 27, 31, 26, 26, 27, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 26, 27, 31, 27
	                      DB               27, 26, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 30, 27, 27, 27, 31, 26, 26, 27, 31, 27, 27, 27, 31, 26, 26, 27, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 26, 26, 31, 27, 26, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 26, 27, 28, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 31, 27, 27, 26, 31, 26, 27, 26, 31, 27, 27, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 27, 26, 27, 31, 26, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 30, 27, 27, 26
	                      DB               31, 27, 27, 26, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 26, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 26, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 26, 26, 27, 31, 31, 31, 31, 31, 31, 27, 26, 27, 30, 27, 27, 27
	                      DB               31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27
	                      DB               27, 27, 31, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 26, 27, 27, 31, 31, 31
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 28, 29, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31
	                      DB               31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 26, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 31, 26, 27, 27, 31, 27
	                      DB               27, 26, 31, 27, 28, 31, 31, 31, 31, 31, 31, 31, 30, 27, 26, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 30, 31, 31, 31, 31, 29
	                      DB               31, 31, 31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 26, 27, 31, 27, 27, 27, 31, 26, 27, 27, 31, 29, 31, 31, 31, 31, 30, 27, 31, 31, 31, 27, 26, 27, 31, 26, 27, 26
	                      DB               31, 26, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 31, 31, 31, 31, 30, 27, 26, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27
	                      DB               27, 27, 31, 31, 31, 31, 31, 28, 26, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 27, 27, 26
	                      DB               31, 31, 30, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 29, 31, 31, 31, 31, 29, 27, 27, 27, 27, 31, 31, 31, 27, 27, 27, 31, 26, 27, 27
	                      DB               31, 26, 26, 27, 31, 27, 26, 27, 31, 28, 31, 31, 31, 31, 31, 27, 27, 27, 27, 27, 31, 31, 30, 27, 26, 27, 31, 27, 27, 27, 31, 27, 27, 26, 31, 27, 27, 26, 31, 31
	                      DB               31, 31, 31, 31, 28, 27, 27, 27, 27, 27, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 26, 27, 31, 28, 26, 27, 30, 31, 31, 31, 31, 28, 27, 27, 27, 26, 27, 27
	                      DB               31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 28, 27, 29, 31, 31, 31, 31, 29, 27, 26, 27, 26, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 27, 27, 27, 27, 27, 26, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 30, 31, 31, 31, 31
	                      DB               31, 28, 27, 27, 27, 27, 27, 27, 27, 27, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 27, 27, 27, 31, 30, 31, 31, 31, 31, 28, 27, 27, 27, 27, 27, 27, 27, 27, 27
	                      DB               31, 31, 31, 27, 26, 27, 31, 27, 27, 26, 31, 27, 26, 27, 31, 31, 31, 31, 31, 29, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 31, 31, 31, 26, 27, 27, 31, 26, 26, 27
	                      DB               31, 26, 27, 28, 31, 31, 31, 31, 30, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 31, 31, 31, 27, 27, 27, 31, 27, 27, 27, 31, 26, 27, 30, 31, 31, 31, 31, 28, 27
	                      DB               27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 29, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27
	                      DB               31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 29, 27, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                      DB               31, 31, 31, 31, 31, 29, 27, 27, 27, 27, 27, 26, 27, 27, 27, 27, 27, 27, 27, 27
    

	GoalKeeperW           equ              30
	GoalKeeperH           equ              150

	GoalKeeperLeftX       equ              10
	GoalKeeperLeftY       equ              45

	GoalKeeperRightX      equ              600
	GoalKeeperRightY      equ              45



	BallX                 Dw               285
	BallY                 Dw               160
	BallSpeedX            DW               0
	BallSpeedY            DW               1
	BallW                 equ              35
	BallH                 equ              35
	BallBound             equ              0
	BallMaxSpeedX         equ              10
	BallMaxSpeedY         equ              -15

	Player1W              equ              43
	Player1H              equ              105
	Player1X              DW               40
	Player1Y              DW               91
	Player1SpeedX         DW               05h
	Player1SpeedY         DW               32h
    
	Player2W              equ              43
	Player2H              equ              105
	Player2X              DW               552
	Player2Y              DW               91
	Player2SpeedX         DW               05h
	Player2SpeedY         DW               32h
    



	ScreenH               equ              196
	SCreenW               equ              640
	Window_Bounds         dw               40
	;Gravity Variables
	GravityLine           dw               91                                                                                                                                                             	;the highest height the player can reach
	LandLine              dw               196                                                                                                                                                            	;the lowest height the player can reach
	GravityAccleration    dw               10d

	Player1FallStatus     dw               0
	Player2FallStatus     dw               0

	Gravity               equ              1                                                                                                                                                              	;gravity acceleration
	FractionDecreaseSpeed equ              2                                                                                                                                                              	;speed loss due to faction between ball and walls
	FractionIncreaseSpeed equ              1
	;__________________________________________________________________________________________________________________________________________
	

	player1_score         db               0

	player2_score         db               0

	name_message          db               'Please Enter Your Name:','$'

	enter_key             db               'Press Enter Key to Continue','$'

	error_message         db               'Incorrect Username, The Username Should Start With a Letter','$'

	p1                    db               'PLAYER 1','$'

	p2                    db               'PLAYER 2','$'
	
	chatting_message      db               '*To start chatting, press F1', '$'

	game_message          db               '*To start Soccer Game, press F2', '$'

	exit_program_message  db               '*To end the program, press ESC', '$'

	end_game_str          db               'To end the game, Press F4','$'

	                      username1_buffer label byte
	max_size1             db               16
	actual_size1          db               ?
	username1             db               16 dup(?)

	                      username2_buffer label byte
	max_size2             db               16
	actual_size2          db               ?
	username2             db               16 dup(?)                                                                                                                                                      	;speed gain due to player hitting a ball

;-------------------------------------------------------------------------------------------------------------------------------------------
.CODE
MAIN PROC FAR

	                                  mov                   ax, @data
	                                  mov                   DS, ax

	;-------------------------------- main screen
	                                  main_screen           username1_buffer, username1, actual_size1, name_message, enter_key, error_message, p1
	                                  main_screen           username2_buffer, username2, actual_size2, name_message, enter_key, error_message, p2

	;-------------------------------- program functionalities screen
                
	functionalites:                   mov                   ah,0
	                                  mov                   al,3
	                                  int                   10h
	                                  clear_screen
	                                  call                  program_functionalities


	key_specify_action:               mov                   ah,1
	                                  int                   16h
	                                  jz                    key_specify_action                                                                   	;check if a key is pressed

	                                  mov                   ah,0
	                                  int                   16h                                                                                  	;get the key

	                                  cmp                   ah,1
	                                  jz                    end_program                                                                          	;if the key is ESC

	                                  cmp                   ah,3ch
	                                  jz                    play_game                                                                            	;if the key is F2

	                                  cmp                   ah,3bh
	                                  jz                    end_program                                                                          	;if the key is F1 (for chatting) 'This will be changed in the next phase'

	                                  jmp                   key_specify_action


	play_game:                        
	                                  mov                   ax, 4F02h
	                                  mov                   bx, 0100h                                                                            	; 640x400 screen graphics mode
	                                  INT                   10h                                                                                  	;execute the configuration
				                     

	                                  call                  score_bar
	                                  call                  print_game_strings
	                                  call                  print_player1_score
	                                  call                  print_player2_score
	                                  

	                                  call                  BackGround
	                                  call                  drawGoalKeepers
	                                  call                  DRAWE_PLAYER1
	                                  call                  DRAWE_PLAYER2

	GameProcess:                      
	                                 
	                                  call                  CheckKeyPressed
	;-------------------------------- to indicate that the user pressed on F4
	                                  cmp                   di,-1
	                                  jnz                   continue_game
	                                  call                  new_game
	                                  jmp                   functionalites
	;-------------------------------------------------------------------------
	continue_game:                    call                  PlayerGravity
	                                  call                  PlayerFall
	                                  call                  REFREASH_SCREEN_PART
	                                  call                  DRAWE_PLAYER1
	                                  call                  DRAWE_PLAYER2
	                                  call                  DrawingBall
	                                  call                  delay
	                                  call                  CheckBallCollisionWithScreen
	                                  call                  CheckBallCollisionWithPlayers
	                                  call                  UpdateBallPosition
	                                  call                  CheckIfBallInsideNet
	                                  

	                                  jmp                   GameProcess

	end_program:                      mov                   ah,4ch
	                                  int                   21h
            
MAIN ENDP
delay proc
	                                  mov                   cx ,0
	                                  mov                   dx ,0a120h
	                                  mov                   ah ,86h
	                                  int                   15h
	                                  ret
delay ENdP
REFREASH_SCREEN_PART PROC

	                                  mov                   di,196

	                                  mov                   dx,0
	                                  mov                   al,7
	                                  mov                   ah,0ch
	                                  mov                   bh,0
	repeate:                          mov                   cx,40
	back_:                            int                   10h
	                                  inc                   cx
	                                  cmp                   cx,600
	                                  jnz                   back_
	                                  inc                   dx
	                                  cmp                   dx,di
	                                  jnz                   repeate

	                                  mov                   di,45

	                                  mov                   dx,0
	                                  mov                   al,7
	                                  mov                   ah,0ch
	                                  mov                   bh,0
	repeate2:                         mov                   cx,0
	back2_:                           int                   10h
	                                  inc                   cx
	                                  cmp                   cx,640
	                                  jnz                   back2_
	                                  inc                   dx
	                                  cmp                   dx,di
	                                  jnz                   repeate2


REFREASH_SCREEN_PART ENDP


PlayerGravity proc near

	;if player y < Gravity line player shuold fall
	Check_PLAYER1_Gravity:            
	                                  mov                   ax,Player1Y
	                                  cmp                   ax,GravityLine                                                                       	;compare Player_Y coordinates with the gravity line
	                                  jl                    Fall_PLAYE1_Active                                                                   	;if Player_Y coordinates is less this means that the player is above the gravity line
	                                  jmp                   Check_PLAYER2_Gravity

	Fall_PLAYE1_Active:               
	                                  mov                   ax,1h
	                                  mov                   Player1FallStatus,ax
	                                  jmp                   Check_PLAYER2_Gravity

	Check_PLAYER2_Gravity:            
	                                  mov                   ax,Player2Y
	                                  cmp                   ax,GravityLine                                                                       	;compare Player_Y coordinates with the gravity line
	                                  jl                    Fall_PLAYE2_Active                                                                   	;if Player_Y coordinates is less this means that the player is above the gravity line
	                                  ret

	Fall_PLAYE2_Active:               
	                                  mov                   ax,1h
	                                  mov                   Player2FallStatus,ax
	                                  ret
PlayerGravity endp
PlayerFall proc    near
	                                  mov                   ax,Player1FallStatus
	                                  cmp                   ax,1h
	                                  jz                    MakePlayer1Down                                                                      	;if player should be falling apply the gravity property
	                                  jmp                   START_PLAYER2_FALING

	MakePlayer1Down:                  
	                                  mov                   ax,GravityAccleration
	                                  add                   Player1Y,ax                                                                          	;this apply the gravity property by adding the gravity accleration to the object Y coordinate
	                                  mov                   ax,Player1Y
	                                  add                   ax,Player1H
	                                  cmp                   ax,LandLine                                                                          	;if the player reachs the land we should unable the gravity property                                                                              	;this line also compare the lowest object y coordinate with the land line
	                                  jl                    START_PLAYER2_FALING                                                                 	;if the lowest object y coordinate is less than the land line means the object still above it and shall fall
	                                  mov                   ax,0h
	                                  mov                   Player1FallStatus,ax
	START_PLAYER2_FALING:             
	                                  mov                   ax,Player2FallStatus
	                                  cmp                   ax,1h
	                                  jz                    MakePlayer2Down                                                                      	;if player should be falling apply the gravity property
	                                  ret

	MakePlayer2Down:                  
	                                  mov                   ax,GravityAccleration
	                                  add                   Player2Y,ax                                                                          	;this apply the gravity property by adding the gravity accleration to the object Y coordinate
	                                  mov                   ax,Player2Y
	                                  add                   ax,Player2H
	                                  cmp                   ax,LandLine                                                                          	;if the player reachs the land we should unable the gravity property                                                                              	;this line also compare the lowest object y coordinate with the land line
	                                  jl                    ENDING                                                                               	;if the lowest object y coordinate is less than the land line means the object still above it and shall fall
	                                  mov                   ax,0h
	                                  mov                   Player2FallStatus,ax
	ENDING:                           
	                                  ret
PlayerFall endp

CheckKeyPressed PROC
	                                  mov                   di,0

	ReadKey:                          mov                   ah,1                                                                                 	;Get key pressed Don't Wait for the key
	                                  int                   16h
	                                  jz                    EXIT

	                                  mov                   ah,0
	                                  int                   16h

	                                  cmp                   ah,72                                                                                	; Check key pressed the update position
	                                  jz                    MoveUp_PLAYER1

	                                  cmp                   ah,75
	                                  jz                    MoveLeft_PLAYER1

	                                  cmp                   ah,77
	                                  jz                    MoveRight_PLAYER1

	                                  cmp                   al,'a'
	                                  JZ                    PLAYER2_LEFT
	                                  cmp                   al,'A'
	                                  jz                    PLAYER2_LEFT

	                                  cmp                   al,'d'
	                                  JZ                    PLAYER2_RIGHT
	                                  cmp                   al,'D'
	                                  JZ                    PLAYER2_RIGHT

	                                  cmp                   al,'w'
	                                  JZ                    PLAYER2_UP
	                                  cmp                   al,'W'
	                                  JZ                    PLAYER2_UP
                         
	;-------------------------------- this is for game's exit
	                                  cmp                   ah,3eh
	                                  jnz                   Exit                                                                                 	;F4 key
	                                  mov                   di, -1                                                                               	;to indicate that the game will exit
	;--------------------------------------------------------
	                                  JMP                   ExitCheckKeyPressed
	Bridge1:                          jmp                   ReadKey

	MoveUp_PLAYER1:                   
	                                  mov                   bx , Player1SpeedY
	                                  sub                   Player1Y  , bx
	                                  mov                   bx  ,Player1Y
	                                  cmp                   bx  ,Window_Bounds
	                                  jg                    ReadKey
	                                  mov                   bx , Player1SpeedY
	                                  ADD                   Player1Y, bx
	                                  jmp                   ReadKey


	EXIT:                             jmp                   ExitCheckKeyPressed
	 
	MoveLeft_PLAYER1:                 
	                                  mov                   ax , Player1X
	                                  sub                   ax , Player1SpeedX
	                                  cmp                   ax  , Window_Bounds
	                                  jl                    ReadKey
	                                  mov                   bx , Player1SpeedX
	                                  SUB                   Player1X,bx
	                                  jmp                   ReadKey

	MoveRight_PLAYER1:                
	                                  mov                   ax , Player1X
	                                  add                   ax , Player1W
	                                  add                   ax , Player1SpeedX
	                                  mov                   bx ,ScreenW
	                                  sub                   bx , Window_Bounds
	                                  cmp                   ax, bx
	                                  jg                    Bridge1
	                                  mov                   bx , Player1SpeedX
	                                  ADD                   Player1X,bx
	                                  jmp                   ReadKey

	READKEY2:                         jmp                   ReadKey
	PLAYER2_LEFT:                     jmp                   MoveLeft_PLAYER2
	PLAYER2_RIGHT:                    jmp                   MoveRight_PLAYER2
	PLAYER2_UP:                       jmp                   MoveUp_PLAYER2
	

	MoveUp_PLAYER2:                   
	                                  mov                   bx , Player2SpeedY
	                                  sub                   Player2Y  , bx
	                                  mov                   bx  ,Player2Y
	                                  cmp                   bx  ,Window_Bounds
	                                  jg                    READKEY2
	                                  mov                   bx , Player2SpeedY
	                                  ADD                   Player2Y, bx
	                                  jmp                   READKEY2


	MoveLeft_PLAYER2:                 
	                                  mov                   ax , Player2X
	                                  sub                   ax , Player2SpeedX
	                                  cmp                   ax  , Window_Bounds
	                                  jl                    READKEY2
	                                  mov                   bx , Player2SpeedX
	                                  SUB                   Player2X,bx
	                                  jmp                   READKEY2

	MoveRight_PLAYER2:                
	                                  mov                   ax , Player2X
	                                  add                   ax , Player2W
	                                  add                   ax , Player2SpeedX
	                                  mov                   bx ,ScreenW
	                                  sub                   bx , Window_Bounds
	                                  cmp                   ax, bx
	                                  jg                    READKEY2
	                                  mov                   bx , Player2SpeedX
	                                  ADD                   Player2X,bx
	                                  jmp                   READKEY2


	ExitCheckKeyPressed:              
	                                  ret

CheckKeyPressed ENDP

DRAWE_PLAYER1 PROC
	                                  MOV                   AH,0Bh                                                                               	;set the configuration
	                                  MOV                   CX, Player1W                                                                         	;set the width (X) up to 64 (based on image resolution)
	                                  MOV                   DX, Player1H                                                                         	;set the hieght (Y) up to 64 (based on image resolution)
	                                  mov                   DI, offset Player1Color                                                              	; to iterate over the pixels
	                                  jmp                   Start1                                                                               	;Avoid drawing before the calculations
	Draw1:                            
	                                  MOV                   AH,0Ch                                                                               	;set the configuration to writing a pixel
	                                  mov                   al, [DI]                                                                             	; color of the current coordinates
	                                  cmp                   al ,31
	                                  JNZ                   valid1
	                                  jmp                   start1
	valid1:                           
	                                  ADD                   CX, Player1X                                                                         	; for shifting in the x -axis
	                                  ADD                   DX, Player1Y                                                                         	; for shifting in the y-axis
	                                  MOV                   BH,00h                                                                               	;set the page number
	                                  INT                   10h                                                                                  	;execute the configuration
	                                  SUB                   CX ,Player1X                                                                         	; return to our CX to validate our loop which get out in (0 ,0)
	                                  SUB                   DX ,Player1Y
	Start1:                           
	                                  inc                   DI
	                                  DEC                   Cx                                                                                   	;  loop iteration in x direction
	                                  JNZ                   Draw1                                                                                	;  check if we can draw c urrent x and y and excape the y iteration
	                                  mov                   Cx, Player1W                                                                         	;  if loop iteration in y direction, then x should start over so that we sweep the grid
	                                  DEC                   DX                                                                                   	;  loop iteration in y direction
	                                  JZ                    ENDING1                                                                              	;  both x and y reached 00 so end program
	                                  Jmp                   Draw1

	ENDING1:                          
	
	                                  ret
DRAWE_PLAYER1 ENDP
DRAWE_PLAYER2 PROC
	                                  MOV                   AH,0Bh                                                                               	;set the configuration
	                                  MOV                   CX, Player2W                                                                         	;set the width (X) up to 64 (based on image resolution)
	                                  MOV                   DX, Player2H                                                                         	;set the hieght (Y) up to 64 (based on image resolution)
	                                  mov                   DI, offset Player2Color                                                              	; to iterate over the pixels
	                                  jmp                   Start2                                                                               	;Avoid drawing before the calculations
	Draw2:                            
	                                  MOV                   AH,0Ch                                                                               	;set the configuration to writing a pixel
	                                  mov                   al, [DI]                                                                             	; color of the current coordinates
	                                  cmp                   al ,31
	                                  JNZ                   valid2
	                                  jmp                   start2
	valid2:                           
	                                  ADD                   CX, Player2X                                                                         	; for shifting in the x -axis
	                                  ADD                   DX, Player2Y                                                                         	; for shifting in the y-axis
	                                  MOV                   BH,00h                                                                               	;set the page number
	                                  INT                   10h                                                                                  	;execute the configuration
	                                  SUB                   CX ,Player2X                                                                         	; return to our CX to validate our loop which get out in (0 ,0)
	                                  SUB                   DX ,Player2Y
	Start2:                           
	                                  inc                   DI
	                                  DEC                   Cx                                                                                   	;  loop iteration in x direction
	                                  JNZ                   Draw2                                                                                	;  check if we can draw c urrent x and y and excape the y iteration
	                                  mov                   Cx, Player2W                                                                         	;  if loop iteration in y direction, then x should start over so that we sweep the grid
	                                  DEC                   DX                                                                                   	;  loop iteration in y direction
	                                  JZ                    ENDING2                                                                              	;  both x and y reached 00 so end program
	                                  Jmp                   Draw2
	ENDING2:                          
DRAWE_PLAYER2 ENDP


DrawingBall PROC
	                                  mov                   dx,BallY
	                                  mov                   cx,BallX
	                                  mov                   si,offset BallColor                                                                  	;intialize the position & carry
	DrawRow:                          

	                                  mov                   al,[si]                                                                              	;mov current color
	                                  mov                   ah,0ch
	                                  cmp                   al ,44
	                                  jZ                    NODROW
	                                  int                   10h                                                                                  	;draw pixed mode

	NODROW:                           inc                   cx
	                                  inc                   si
	                                  mov                   di,BallX
	                                  add                   di,BallW
	                                  cmp                   cx,di                                                                                	;check end of current row
	                                  jNE                   DrawRow

	                                  mov                   cx,BallX
	                                  inc                   dx
	                                  mov                   di,BallY
	                                  add                   di,BallH
	                                  cmp                   dx,di
	                                  JNE                   DrawRow                                                                              	;check end of all rows

	                                  ret
DrawingBall ENDP

	;description
CheckBallCollisionWithScreen PROC


	;check collision with right edge of the screen
	                                  mov                   Ax,BallX
	                                  add                   Ax,BallW
	                                  add                   Ax,BallBound
	                                  cmp                   Ax,ScreenW
    
	                                  JNG                   NoCollisionWithRightEdge
	                                  cmp                   BallSpeedx,0
	                                  JE                    NoCollisionWithRightEdge
	                                  NEG                   BallSpeedX
	                                  add                   BallSpeedx,FractionDecreaseSpeed
	NoCollisionWithRightEdge:         

	;check collision with left edge of the screen
	                                  mov                   Ax,BallX
	                                  cmp                   Ax,BallBound
	                                  JNL                   NoCollisionWithLeftEdge
	                                  cmp                   BallSpeedx,0
	                                  JE                    NoCollisionWithLeftEdge
	                                  NEG                   BallSpeedx
	;        sub                   BallSpeedx,FractionDecreaseSpeed
	NoCollisionWithLeftEdge:          

	;check collision with upper edge of the screen
	                                  mov                   Ax,BallY
	                                  cmp                   Ax,BallBound
	                                  JNL                   NoCollisionWithUpperEdge
	                                  cmp                   BallSpeedY,0
	                                  JE                    NoCollisionWithUpperEdge
	                                  NEG                   BallSpeedY
	                                  sub                   BallSpeedY,FractionDecreaseSpeed
	NoCollisionWithUpperEdge:         

	;check collision with lower edge of the screen
	                                  mov                   Ax,BallY
	                                  add                   Ax,BallH
	                                  cmp                   Ax,ScreenH
	                                  JNG                   NoCollisionWithLowerEdge
	                                  cmp                   BallSpeedY,0
	                                  JE                    NoCollisionWithLowerEdge
	                                  NEG                   BallSpeedY
	                                  add                   BallSpeedY,FractionDecreaseSpeed
	NoCollisionWithLowerEdge:         

CheckBallCollisionWithScreen ENDP

	;description
UpdateBallPosition PROC
	;check if a player has hit the ball and still the ball is affected
	NoAffectOfLastPlayerShoot:        
	;add gravity affect
	                                  mov                   Ax,Gravity
	                                  add                   BallSpeedY,Ax
	;check if the speedx crossed the limit
	                                  cmp                   BallSpeedX,BallMaxSpeedX
	                                  jLE                   BallSpeedXIsFine
	                                  mov                   BallSpeedx,BallMaxSpeedX
	BallSpeedXIsFine:                 

	;check if the speedy crossed the limit
	                                  cmp                   BallSpeedY,BallMaxSpeedY
	                                  jGE                   BallSpeedYIsFine
	                                  mov                   BallSpeedY,BallMaxSpeedY
	BallSpeedYIsFine:                 
	                                  mov                   Ax,BallSpeedX
	                                  add                   BallX,Ax
	                                  mov                   Ax,BallSpeedY
	                                  add                   BallY,Ax


	;check if ballY crossed the upper screen
	                                  mov                   Ax,0
	                                  dec                   Ax
	                                  cmp                   BallY,Ax
	                                  JNL                   ExitCheckBallCrossedUpper
	                                  mov                   BallY,Ax
	ExitCheckBallCrossedUpper:        
	;check if ballY crossed the lower screen
	                                  mov                   Ax,ScreenH
	                                  sub                   Ax,BallH
	                                  inc                   Ax
	                                  cmp                   BallY,Ax
	                                  JNG                   ExitCheckBallCrossedLower
	                                  mov                   BallY,Ax
	ExitCheckBallCrossedLower:        

	;check if ballY crossed the Right screen
	                                  mov                   Ax,ScreenW
	                                  sub                   Ax,BallW
	                                  inc                   Ax
	                                  cmp                   BallX,Ax
	                                  JNG                   ExitCheckBallCrossedRight
	                                  mov                   BallX,Ax
	ExitCheckBallCrossedRight:        
	;check if ballY crossed the Left screen
	                                  mov                   Ax,0
	                                  dec                   Ax
	                                  cmp                   BallX,Ax
	                                  JNL                   ExitCheckBallCrossedLeft
	                                  mov                   BallX,Ax
	ExitCheckBallCrossedLeft:         
	
	ExitUpdateBallPosition:           
	                                  ret
UpdateBallPosition ENDP


	;description
UpdatePlayer1Position PROC

	                                  mov                   Bx,ScreenH
	                                  sub                   Bx,Player1H
	                                  cmp                   Player1Y,Bx
	                                  JE                    ExitUpdatePlayer1Position
	                                  mov                   Ax,Player1SpeedY
	                                  add                   Player1Y,Ax
	
	ExitUpdatePlayer1Position:        
	                                  ret
UpdatePlayer1Position ENDP

	;description
CheckBallCollisionWithPlayers PROC
	;first check the x axis maxx1>minx2 && maxx2>minx1
	                                  mov                   Ax,BallX
	                                  add                   Ax,BallW
	                                  mov                   Bx ,Player1X
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer1

	                                  mov                   Ax,Player1X
	                                  add                   Ax,Player1W
	                                  mov                   Bx,BallX
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer1
									            

	;first check the y axis maxy1>miny2 && maxy2>miny1

	                                  mov                   Ax,BallY
	                                  add                   Ax,BallH
	                                  mov                   Bx ,Player1Y
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer1

	                                  mov                   Ax,Player1Y
	                                  add                   Ax,Player1H
	                                  mov                   Bx,BallY
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer1

	                                  NEG                   BallSpeedX
	;increase ballspeed in both direction due to colision
	                                  add                   BallSpeedY,10
	                                  mov                   Ax,Player1X
	                                  add                   Ax,Player1W
	                                  mov                   Bx,BallX
	                                  add                   Bx,BallW
	                                  cmp                   Ax,Bx
	                                  JL                    Player1IsOnLeft
	                                  sub                   BallSpeedX,5
	                                  jmp                   ExitCheckBallCollisionWithPlayer1
	Player1IsOnLeft:                  add                   BallSpeedX,5

	ExitCheckBallCollisionWithPlayer1:
	;first check the x axis maxx1>minx2 && maxx2>minx1
	                                  mov                   Ax,BallX
	                                  add                   Ax,BallW
	                                  mov                   Bx ,Player2X
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer2

	                                  mov                   Ax,Player2X
	                                  add                   Ax,Player2W
	                                  mov                   Bx,BallX
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer2

	;first check the y axis maxy1>miny2 && maxy2>miny1

	                                  mov                   Ax,BallY
	                                  add                   Ax,BallH
	                                  mov                   Bx ,Player2Y
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer2

	                                  mov                   Ax,Player2Y
	                                  add                   Ax,Player2H
	                                  mov                   Bx,BallY
	                                  cmp                   Ax,Bx
	                                  JNG                   ExitCheckBallCollisionWithPlayer2

	                                  NEG                   BallSpeedX
	;increase ballspeed in both direction due to colision
	                                  add                   BallSpeedY,10
	                                  mov                   Ax,Player2X
	                                  add                   Ax,Player2W
	                                  mov                   Bx,BallX
	                                  add                   Bx,BallW
	                                  cmp                   Ax,Bx
	                                  JL                    Player2IsOnLeft
	                                  sub                   BallSpeedX,5
	                                  jmp                   ExitCheckBallCollisionWithPlayer2
	Player2IsOnLeft:                  add                   BallSpeedX,5

	ExitCheckBallCollisionWithPlayer2:
	                                  ret
CheckBallCollisionWithPlayers ENDP



BackGround proc

	                                  mov                   di,196

	                                  mov                   dx,0
	                                  mov                   al,7
	                                  mov                   ah,0ch
	                                  mov                   bh,0
	again:                            mov                   cx,0
	back:                             int                   10h
	                                  inc                   cx
	                                  cmp                   cx,640
	                                  jnz                   back
	                                  inc                   dx
	                                  cmp                   dx,di
	                                  jnz                   again


	                                  add                   di,4
	                                  mov                   al,0
	again1:                           mov                   cx,0
	back1:                            int                   10h
	                                  inc                   cx
	                                  cmp                   cx,640
	                                  jnz                   back1
	                                  inc                   dx
	                                  cmp                   dx,di
	                                  jnz                   again1

	                                  add                   di,80
	                                  mov                   al,2
	again2:                           mov                   cx,0
	back2:                            int                   10h
	                                  inc                   cx
	                                  cmp                   cx,640
	                                  jnz                   back2
	                                  inc                   dx
	                                  cmp                   dx,di
	                                  jnz                   again2

	                                  ret

BackGround endp

drawGoalKeepers proc

	                                  MOV                   AH,0Bh                                                                               	;set the configuration
	                                  MOV                   CX, GoalKeeperW                                                                      	;set the width (X) up to 64 (based on image resolution)
	                                  MOV                   DX, GoalKeeperH                                                                      	;set the hieght (Y) up to 64 (based on image resolution)
	                                  mov                   DI, offset LeftGoalKeeper                                                            	; to iterate over the pixels
	                                  jmp                   StartLeft

	DrawLeft:                         
	                                  MOV                   AH,0Ch                                                                               	;set the configuration to writing a pixel
	                                  mov                   al, [DI]                                                                             	; color of the current coordinates
	                                  MOV                   BH,00h
	                                  cmp                   al ,27
	                                  je                    StartLeft
	                                  jmp                   validLeft                                                                            	;set the page number
	                                  INT                   10h                                                                                  	;execute the configuration

	validLeft:                        
	                                  ADD                   CX, GoalKeeperLeftX                                                                  	; for shifting in the x -axis
	                                  ADD                   DX, GoalKeeperLeftY                                                                  	; for shifting in the y-axis
	                                  MOV                   BH,00h                                                                               	;set the page number
	                                  INT                   10h                                                                                  	;execute the configuration
	                                  SUB                   CX ,GoalKeeperLeftX                                                                  	; return to our CX to validate our loop which get out in (0 ,0)
	                                  SUB                   DX ,GoalKeeperLeftY
	StartLeft:                        
	                                  inc                   DI
	                                  DEC                   Cx                                                                                   	;  loop iteration in x direction
	                                  JNZ                   DrawLeft                                                                             	;  check if we can draw current x and y and excape the y iteration
	                                  mov                   Cx, GoalKeeperW                                                                      	;  if loop iteration in y direction, then x should start over so that we sweep the grid
	                                  DEC                   DX                                                                                   	;  loop iteration in y direction
	                                  JZ                    ENDINGLeft                                                                           	;  both x and y reached 00 so end program
	                                  Jmp                   DrawLeft

	ENDINGLeft:                       


	                                  MOV                   AH,0Bh                                                                               	;set the configuration
	                                  MOV                   CX, GoalKeeperW                                                                      	;set the width (X) up to 64 (based on image resolution)
	                                  MOV                   DX, GoalKeeperH
	                                  mov                   DI, offset rightGoalKeeper                                                           	; to iterate over the pixels
	                                  jmp                   StartRight                                                                           	;Avoid drawing before the calculations

	DrawRight:                        
	                                  MOV                   AH,0Ch                                                                               	;set the configuration to writing a pixel
	                                  mov                   al, [DI]                                                                             	; color of the current coordinates
	                                  MOV                   BH,00h
	                                  cmp                   al ,27
	                                  je                    StartRight                                                                           	;set the page number
	                                  jmp                   validRight                                                                           	;set the page number
	                                  INT                   10h                                                                                  	;execute the configuration

	validRight:                       
	                                  ADD                   CX, GoalKeeperRightX                                                                 	; for shifting in the x -axis
	                                  ADD                   DX, GoalKeeperRightY                                                                 	; for shifting in the y-axis
	                                  MOV                   BH,00h                                                                               	;set the page number
	                                  INT                   10h                                                                                  	;execute the configuration
	                                  SUB                   CX ,GoalKeeperRightX                                                                 	; return to our CX to validate our loop which get out in (0 ,0)
	                                  SUB                   DX ,GoalKeeperRightY
	StartRight:                       
	                                  inc                   DI
	                                  DEC                   Cx                                                                                   	;  loop iteration in x direction
	                                  JNZ                   DrawRight                                                                            	;  check if we can draw c urrent x and y and excape the y iteration
	                                  mov                   Cx, GoalKeeperW                                                                      	;  if loop iteration in y direction, then x should start over so that we sweep the grid
	                                  DEC                   DX                                                                                   	;  loop iteration in y direction
	                                  JZ                    ENDINGRight                                                                          	;  both x and y reached 00 so end program
	                                  Jmp                   DrawRight

	ENDINGRight:                      
	                                  ret
drawGoalKeepers endp

program_functionalities proc

	;-------------------------------- move cursor
	                                  mov                   ah,2
	                                  mov                   dl,25
	                                  mov                   dh,10
	                                  mov                   bh,0
	                                  int                   10h

	;-------------------------------- print chatting message
	                                  mov                   dx,offset chatting_message
	                                  mov                   ah,9
	                                  int                   21h

	;-------------------------------- move cursor
	                                  mov                   ah,2
	                                  mov                   dl,25
	                                  mov                   dh,12
	                                  mov                   bh,0
	                                  int                   10h

	;-------------------------------- print game message
	                                  mov                   dx,offset game_message
	                                  mov                   ah,9
	                                  int                   21h

	;-------------------------------- move cursor
	                                  mov                   ah,2
	                                  mov                   dl,25
	                                  mov                   dh,14
	                                  mov                   bh,0
	                                  int                   10h

	;-------------------------------- print exit program message
	                                  mov                   dx,offset exit_program_message
	                                  mov                   ah,9
	                                  int                   21h

	;-------------------------------- status bar
	                                  print_dashes          22
	                                  ret
program_functionalities endp


print_game_strings proc
	;-------------------------------- write at the center
	                                  mov                   ah,0
	                                  mov                   al,max_size1
	                                  sub                   al,actual_size1
	                                  mov                   bl,2
	                                  div                   bl

	;-------------------------------- move cursor
	                                  mov                   ah,2
	                                  mov                   dl,20
	                                  add                   dl,al
	                                  mov                   dh,18
	                                  mov                   bh,0
	                                  int                   10h

	;-------------------------------- print first player's name
	                                  mov                   dx,offset username1
	                                  mov                   ah,9
	                                  int                   21h

	;-------------------------------- write at the center
	                                  mov                   ah,0
	                                  mov                   al,max_size2
	                                  sub                   al,actual_size2
	                                  mov                   bl,2
	                                  div                   bl

	;-------------------------------- move cursor
	                                  mov                   ah,2
	                                  mov                   dh,18
	                                  mov                   dl,45
	                                  add                   dl,al
	                                  mov                   bh,0
	                                  int                   10h

	;-------------------------------- print the second's player name
	                                  mov                   dx,offset username2
	                                  mov                   ah,9
	                                  int                   21h



	;-------------------------------- move cursor to the last line
	                                  mov                   ah,2
	                                  mov                   dl,0
	                                  mov                   dh,24
	                                  mov                   bh,0
	                                  int                   10h

	;------------------------------------ print the end game string
	                                  mov                   dx,offset end_game_str
	                                  mov                   ah,9
	                                  int                   21h

	                                  ret

print_game_strings endp


print_player1_score proc

	;-------------------------------- move cursor
	                                  mov                   ah,2
	                                  mov                   dh,18
	                                  mov                   dl,38
	                                  mov                   bh,0
	                                  int                   10h

	;-------------------------------- print score
	                                  mov                   dl, player1_score
	                                  add                   dl,30h
	                                  mov                   ah,2
	                                  int                   21h

	                                  ret
print_player1_score endp



print_player2_score proc

	;------------------------------------ move cursor
	                                  mov                   ah,2
	                                  mov                   dh,18
	                                  mov                   dl,41
	                                  mov                   bh,0
	                                  int                   10h

	;------------------------------------ print score
	                                  mov                   dl, player2_score
	                                  add                   dl,30h
	                                  mov                   ah,2
	                                  int                   21h

	                                  ret
print_player2_score endp

score_bar proc

	;-------------------------------- score bar and separators
	                                  print_game_separators 144,305,498
	                                  print_game_separators 144,280,496
	                                  print_game_separators 0,380,640

	                                  score_line_separators 144,280
	                                  score_line_separators 295,280
	                                  score_line_separators 319,280
	                                  score_line_separators 342,280
	                                  score_line_separators 496,280
									  
	                                  ret
score_bar endp

	;description
CheckIfBallInsideNet PROC

	; check if ball inside the left net
	                                  mov                   Ax,BallX
	                                  add                   Ax,BallW
	                                  mov                   Bx ,GoalKeeperLeftX
	                                  add                   Bx,GoalKeeperW
	                                  cmp                   Ax,Bx
	                                  JG                    BallIsnotInsideLeftNet

	                                  mov                   Ax,BallY
	                                  cmp                   Ax,GoalKeeperLeftY
	                                  JL                    BallIsnotInsideLeftNet

	                                  inc                   player2_score
	                                  call                  print_player2_score

	                                  call                  PutElementsInIntialPosition

	BallIsnotInsideLeftNet:           

	; check if ball inside the right net
	                                  mov                   Ax,BallX
	                                  mov                   Bx ,GoalKeeperRightX
	                                  cmp                   Ax,Bx
	                                  JL                    BallIsnotInsideRightNet

	                                  mov                   Ax,BallY
	                                  cmp                   Ax,GoalKeeperRightY
	                                  JL                    BallIsnotInsideRightNet

	                                  inc                   player1_score
	                                  call                  print_player1_score

	                                  call                  PutElementsInIntialPosition


	BallIsnotInsideRightNet:          


	                                  ret
CheckIfBallInsideNet ENDP

	;description
PutElementsInIntialPosition PROC
	                                  mov                   BallX,285
	                                  mov                   BallY,160
	                                  mov                   BallSpeedX,0
	                                  mov                   BallSpeedY,0
	                                  mov                   Player1X,40
	                                  mov                   Player1Y,91
	                                  mov                   Player2X,557
	                                  mov                   Player2Y,91
	                                  mov                   Player1SpeedX,08h
	                                  mov                   Player1SpeedY,32h
	                                  mov                   Player2SpeedX,08h
	                                  mov                   Player2SpeedY,32h
	                                  mov                   Player1FallStatus,0
	                                  mov                   Player2FallStatus,0
	                                  call                  BackGround
	                                  call                  DrawingBall
	                                  Call                  drawGoalKeepers

	                                  ret
PutElementsInIntialPosition ENDP

new_game proc
	                                  mov                   player1_score,0
	                                  mov                   player2_score,0
	                                  mov                   Player1X,40
	                                  mov                   Player1Y,91
	                                  mov                   Player2X,552
	                                  mov                   Player2Y,91
	                                  ret
new_game endp

END MAIN